import { mapValues } from 'lodash-es';
import { omit } from 'lodash-es';
import { isPlainObject } from 'lodash-es';
import { wrap } from 'lodash-es';
var FROM_HIGHCHARTS_PROVIDER = 'getHighcharts';
var FROM_CHART_PROVIDER = 'getChart';
var FROM_AXIS_PROVIDER = 'getAxis';
var FROM_SERIES_PROVIDER = 'getSeries';
export var PROVIDED_PROPS = [FROM_HIGHCHARTS_PROVIDER, FROM_CHART_PROVIDER, FROM_AXIS_PROVIDER, FROM_SERIES_PROVIDER];

function cleanConfig(config) {
  return omit(config, PROVIDED_PROPS);
}

function deepCleanConfig(config) {
  var cleanedRoot = cleanConfig(config);
  return mapValues(cleanedRoot, function (prop) {
    if (isPlainObject(prop) === false) return prop;
    return deepCleanConfig(prop);
  });
}

export default function removeProvidedProps(func) {
  return wrap(func, function (origFunc, config) {
    var cleanedConfig = deepCleanConfig(config);

    for (var _len = arguments.length, rest = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      rest[_key - 2] = arguments[_key];
    }

    return origFunc.apply(void 0, [cleanedConfig].concat(rest));
  });
}