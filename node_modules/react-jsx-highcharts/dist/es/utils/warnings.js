/* eslint-disable no-console */
import { findKey } from 'lodash-es';
var titleCSS = 'color:red; font-size:20px; font-weight: bold;';

var descCSS = function descCSS(color) {
  return "font-size: 16px; color:".concat(color, ";");
};

var descDefaultCSS = descCSS('#000');
var descDefaultItalicCSS = descCSS('#000') + 'font-style:italic;';
var descKeywordCSS = descCSS('#008') + 'font-weight:600;';
var descStringCSS = descCSS('#080');
var descCommentCSS = descCSS('#808080') + 'font-style:italic;';
var descNewLine = 'font-size: 1px; margin-right: 100%;';
var moduleToImportPath = {
  more: 'highcharts-more',
  threeD: 'highcharts-3d',
  bullet: 'modules/bullet',
  funnel: 'modules/funnel',
  histogram: 'modules/histogram-bellcurve',
  pareto: 'modules/pareto',
  sankey: 'modules/sankey',
  solidgauge: 'modules/solid-gauge',
  streamgraph: 'modules/streamgraph',
  sunburst: 'modules/sunburst',
  tilemap: 'modules/tilemap',
  treemap: 'modules/treemap',
  variablepie: 'modules/variable-pie',
  variwide: 'modules/variwide',
  vector: 'modules/vector',
  windbarb: 'modules/windbarb',
  xrange: 'modules/xrange'
};
var moduleToVarName = {
  more: 'addHighchartsMore',
  threeD: 'addHighcharts3DModule',
  bullet: 'addBulletModule',
  funnel: 'addFunnelModule',
  histogram: 'addHistogramBellCurveModule',
  pareto: 'addParetoModule',
  sankey: 'addSankeyModule',
  solidgauge: 'addSolidGaugeModule',
  streamgraph: 'addStreamGraphModule',
  sunburst: 'addSunburstModule',
  tilemap: 'addTilemapModule',
  treemap: 'addTreemapModule',
  variablepie: 'addVariablePieModule',
  variwide: 'addVariwideModule',
  vector: 'addVectorModule',
  windbarb: 'addWindBarbModule',
  xrange: 'addXRangeModule'
};
var moduleToSeriesTypes = {
  more: ['arearange', 'areasplinerange', 'boxplot', 'bubble', 'columnrange', 'errorbar', 'polygon', 'waterfall', 'gauge'],
  threeD: ['scatter3d'],
  bullet: ['bullet'],
  funnel: ['funnel', 'pyramid'],
  histogram: ['histogram', 'bellcurve'],
  pareto: ['pareto'],
  sankey: ['sankey'],
  solidgauge: ['solidgauge'],
  streamgraph: ['streamgraph'],
  sunburst: ['sunburst'],
  tilemap: ['tilemap'],
  treemap: ['treemap'],
  variablepie: ['variablepie'],
  variwide: ['variwide'],
  vector: ['vector'],
  windbarb: ['windbarb'],
  xrange: ['xrange']
};

var findModule = function findModule(seriesType) {
  return findKey(moduleToSeriesTypes, function (seriesTypes) {
    return seriesTypes.indexOf(seriesType) !== -1;
  });
};

var logDetailedErrorMessage = function logDetailedErrorMessage(warning, module) {
  var importPath = moduleToImportPath[module];
  var varName = moduleToVarName[module];
  console.group("React JSX Highcharts error");
  console.log("%c".concat(warning), titleCSS);
  console.log('More information: https://github.com/whawker/react-jsx-highcharts/wiki/Highcharts-error-%2317');
  console.log("You likely need to import the additional module, try adding \n    %c  \n    %c %cimport %cHighcharts %cfrom %c'highcharts'%c;\n    %c %cimport %c".concat(varName, " %cfrom %c'highcharts/").concat(importPath, "'%c;\n    %c\n    %c %c// After imports, but before component - apply additional functionality from module to Highcharts\n    %c %c").concat(varName, "%c(Highcharts);").replace(/^ +/gm, ''), descNewLine, descNewLine, descKeywordCSS, descDefaultCSS, descKeywordCSS, descStringCSS, descDefaultCSS, descNewLine, descKeywordCSS, descDefaultCSS, descKeywordCSS, descStringCSS, descDefaultCSS, descNewLine, descNewLine, descCommentCSS, descNewLine, descDefaultItalicCSS, descDefaultCSS);
  console.groupEnd();
};

export var logSeriesErrorMessage = function logSeriesErrorMessage(seriesType) {
  if (process.env.NODE_ENV === 'development') {
    var warning = "This series type \"".concat(seriesType, "\" requires an additional Highcharts module");
    var module = findModule(seriesType);

    if (!module) {
      console.warn("".concat(warning, ", or is invalid."));
      return;
    }

    logDetailedErrorMessage(warning, module);
  }
};
export var logZAxisErrorMessage = function logZAxisErrorMessage() {
  if (process.env.NODE_ENV === 'development') {
    logDetailedErrorMessage('This axis type "ZAxis" requires an additional Highcharts module', 'threeD');
  }
};